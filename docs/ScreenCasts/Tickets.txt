Ticket Screencast
=================

Introduction and Disclaimer
---------------------------

Hello, everybody, my name is Douglas Mayle, and I'm here today to show you a
demo of DVDev's ticketing system.  We'll be walking through several scenarios
to give you an idea of what you can do already with DVDev. As a disclaimer, I'd
like you to know that while I think that DVDev's ticketing sytem is already
best in class, I'll be showing you a developer release, with no polish or
graphic design.

Scenario 1: Developer filing bug
--------------------------------

I'm using some open source software, and it has a bug, so I'll easy_install
dvdev, and launch it for a repository that already has a ticket database.
(We use a url so that it clones the repository for me)  It autolaunches
my web browser (I'll leave it open with no windows so that it happens quickly)
and add a ticket. While I'm there, I edit a file to add a stub (def something:
pass)

In my first scenario, I noticed a problem with blarg, which uses DVDev for
ticketing, so I'd like to create a new issue.  First I'm going to install DVDev
on my system.  If you're trying to follow the demo on a Mac, then be sure to
install the Developer Tools. On Ubuntu, you need to make sure that you have the
python development package.

As you can see, I just type `sudo easy_install DVDev`, which fetches all of the
required dependencies.  Now that I have DVDev installed, I'll launch it for the
project.  I've got a demo repository served locally, so I'll just use that. 

Scenario 2: Picking out my work
-------------------------------

I'm starting my work for the day, so I navigate to my repository, and get an
immediate view of the work to do.  I have a 3 Day high priority ticket, and a 1
Hour normal priority ticket.  Since I only have a short time to work, I'll
decide to start the lower priority ticket. (I pick out the ticket from scenario 1).

Scenario 3: Fixing an open ticket
---------------------------------

Now I have a ticket I'm already working on, I go to the detail view, and I see
that having committed the stub with ticket made it show up in the history view.
I edit this file to provide the implementation.  I've just finished the
changes, so I go to my Diff/Commit Screen and check out the changes.  I've only
changed one file, so I'm presented with the associated ticket.  I update the
comments, click on close, and commit my changes.

Scenario 4: Planning a release
------------------------------

I've been watching this release, and I need to know how things are going.  I
take a look at the burndown chart, and I see that it progressed normally, then
stagnated, and is now progressing again.  Unfortunately, this will put me over
deadline, so I need to react.  I go to the issues screen, I lower the priority
on a ticket, and I push one of the tickets back to another release.


Highlight:
 * Unplanned tickets
 * Reprioritize and regroup tickets
 * Burndown charts
 * Ticket creation
 * Related tickets
 * Detailed ticket view
 * Not needing to link the tickets with text.
